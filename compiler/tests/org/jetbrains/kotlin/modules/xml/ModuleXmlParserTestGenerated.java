/*
 * Copyright 2010-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license
 * that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.modules.xml;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/testData/modules.xml")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class ModuleXmlParserTestGenerated extends AbstractModuleXmlParserTest {
    public void testAllFilesPresentInModules_xml() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/testData/modules.xml"), Pattern.compile("^(.+)\\.xml$"), TargetBackend.ANY, true);
    }

    @TestMetadata("allOnce.xml")
    public void testAllOnce() throws Exception {
        KotlinTestUtils.runTest("compiler/testData/modules.xml/allOnce.xml", this::doTest);
    }

    @TestMetadata("comments.xml")
    public void testComments() throws Exception {
        KotlinTestUtils.runTest("compiler/testData/modules.xml/comments.xml", this::doTest);
    }

    @TestMetadata("empty.xml")
    public void testEmpty() throws Exception {
        KotlinTestUtils.runTest("compiler/testData/modules.xml/empty.xml", this::doTest);
    }

    @TestMetadata("emptyModule.xml")
    public void testEmptyModule() throws Exception {
        KotlinTestUtils.runTest("compiler/testData/modules.xml/emptyModule.xml", this::doTest);
    }

    @TestMetadata("manyTimes.xml")
    public void testManyTimes() throws Exception {
        KotlinTestUtils.runTest("compiler/testData/modules.xml/manyTimes.xml", this::doTest);
    }

    @TestMetadata("onlySources.xml")
    public void testOnlySources() throws Exception {
        KotlinTestUtils.runTest("compiler/testData/modules.xml/onlySources.xml", this::doTest);
    }

    @TestMetadata("twoModules.xml")
    public void testTwoModules() throws Exception {
        KotlinTestUtils.runTest("compiler/testData/modules.xml/twoModules.xml", this::doTest);
    }

    @TestMetadata("typeTestModule.xml")
    public void testTypeTestModule() throws Exception {
        KotlinTestUtils.runTest("compiler/testData/modules.xml/typeTestModule.xml", this::doTest);
    }
}

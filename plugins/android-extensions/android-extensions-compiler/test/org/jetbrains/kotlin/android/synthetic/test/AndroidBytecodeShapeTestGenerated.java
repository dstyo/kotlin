/*
 * Copyright 2010-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license
 * that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.android.synthetic.test;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class AndroidBytecodeShapeTestGenerated extends AbstractAndroidBytecodeShapeTest {
    @TestMetadata("activityWithEntityOptionsNoCache")
    public void testActivityWithEntityOptionsNoCache() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/activityWithEntityOptionsNoCache/", this::doTest);
    }

    public void testAllFilesPresentInBytecodeShape() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape"), Pattern.compile("^([^\\.]+)$"), TargetBackend.ANY, false);
    }

    @TestMetadata("baseClass")
    public void testBaseClass() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/baseClass/", this::doTest);
    }

    @TestMetadata("baseClassFragment")
    public void testBaseClassFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/baseClassFragment/", this::doTest);
    }

    @TestMetadata("clearCache")
    public void testClearCache() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/clearCache/", this::doTest);
    }

    @TestMetadata("clearCacheBaseClass")
    public void testClearCacheBaseClass() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/clearCacheBaseClass/", this::doTest);
    }

    @TestMetadata("dialog")
    public void testDialog() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/dialog/", this::doTest);
    }

    @TestMetadata("extensionFunctions")
    public void testExtensionFunctions() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/extensionFunctions/", this::doTest);
    }

    @TestMetadata("extensionFunctionsFragment")
    public void testExtensionFunctionsFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/extensionFunctionsFragment/", this::doTest);
    }

    @TestMetadata("extensionFunctionsView")
    public void testExtensionFunctionsView() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/extensionFunctionsView/", this::doTest);
    }

    @TestMetadata("fqNameInAttr")
    public void testFqNameInAttr() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fqNameInAttr/", this::doTest);
    }

    @TestMetadata("fqNameInAttrFragment")
    public void testFqNameInAttrFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fqNameInAttrFragment/", this::doTest);
    }

    @TestMetadata("fqNameInTag")
    public void testFqNameInTag() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fqNameInTag/", this::doTest);
    }

    @TestMetadata("fqNameInTagFragment")
    public void testFqNameInTagFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fqNameInTagFragment/", this::doTest);
    }

    @TestMetadata("fragmentWithEntityOptionsNoCache")
    public void testFragmentWithEntityOptionsNoCache() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fragmentWithEntityOptionsNoCache/", this::doTest);
    }

    @TestMetadata("kt18545")
    public void testKt18545() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/kt18545/", this::doTest);
    }

    @TestMetadata("multiFile")
    public void testMultiFile() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/multiFile/", this::doTest);
    }

    @TestMetadata("multiFileFragment")
    public void testMultiFileFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/multiFileFragment/", this::doTest);
    }

    @TestMetadata("onDestroyFragment")
    public void testOnDestroyFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/onDestroyFragment/", this::doTest);
    }

    @TestMetadata("simple")
    public void testSimple() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simple/", this::doTest);
    }

    @TestMetadata("simpleFragment")
    public void testSimpleFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simpleFragment/", this::doTest);
    }

    @TestMetadata("simpleFragmentProperty")
    public void testSimpleFragmentProperty() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simpleFragmentProperty/", this::doTest);
    }

    @TestMetadata("simpleHashMapCacheImplementation")
    public void testSimpleHashMapCacheImplementation() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simpleHashMapCacheImplementation/", this::doTest);
    }

    @TestMetadata("simpleView")
    public void testSimpleView() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simpleView/", this::doTest);
    }

    @TestMetadata("supportExtensionFunctionsFragment")
    public void testSupportExtensionFunctionsFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportExtensionFunctionsFragment/", this::doTest);
    }

    @TestMetadata("supportExtensionFunctionsFragmentAndroidx")
    public void testSupportExtensionFunctionsFragmentAndroidx() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportExtensionFunctionsFragmentAndroidx/", this::doTest);
    }

    @TestMetadata("supportSimpleFragment")
    public void testSupportSimpleFragment() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportSimpleFragment/", this::doTest);
    }

    @TestMetadata("supportSimpleFragmentAndroidx")
    public void testSupportSimpleFragmentAndroidx() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportSimpleFragmentAndroidx/", this::doTest);
    }

    @TestMetadata("supportSimpleFragmentProperty")
    public void testSupportSimpleFragmentProperty() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportSimpleFragmentProperty/", this::doTest);
    }

    @TestMetadata("supportSimpleFragmentPropertyAndroidx")
    public void testSupportSimpleFragmentPropertyAndroidx() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportSimpleFragmentPropertyAndroidx/", this::doTest);
    }

    @TestMetadata("viewStub")
    public void testViewStub() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/viewStub/", this::doTest);
    }

    @TestMetadata("viewWithCache")
    public void testViewWithCache() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/viewWithCache/", this::doTest);
    }

    @TestMetadata("viewWithDefaultNoCache")
    public void testViewWithDefaultNoCache() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/viewWithDefaultNoCache/", this::doTest);
    }

    @TestMetadata("viewWithEntityOptionsNoCache")
    public void testViewWithEntityOptionsNoCache() throws Exception {
        KotlinTestUtils.runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/viewWithEntityOptionsNoCache/", this::doTest);
    }
}

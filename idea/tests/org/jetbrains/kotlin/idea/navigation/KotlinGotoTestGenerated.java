/*
 * Copyright 2010-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license
 * that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.idea.navigation;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@RunWith(JUnit3RunnerWithInners.class)
public class KotlinGotoTestGenerated extends AbstractKotlinGotoTest {
    @TestMetadata("idea/testData/navigation/gotoClass")
    @TestDataPath("$PROJECT_ROOT")
    @RunWith(JUnit3RunnerWithInners.class)
    public static class GotoClass extends AbstractKotlinGotoTest {
        public void testAllFilesPresentInGotoClass() throws Exception {
            KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/navigation/gotoClass"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
        }

        @TestMetadata("builtInAny.kt")
        public void testBuiltInAny() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/builtInAny.kt", this::doClassTest);
        }

        @TestMetadata("builtInInt.kt")
        public void testBuiltInInt() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/builtInInt.kt", this::doClassTest);
        }

        @TestMetadata("enumEntries.kt")
        public void testEnumEntries() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/enumEntries.kt", this::doClassTest);
        }

        @TestMetadata("inClassObject.kt")
        public void testInClassObject() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/inClassObject.kt", this::doClassTest);
        }

        @TestMetadata("innerClass.kt")
        public void testInnerClass() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/innerClass.kt", this::doClassTest);
        }

        @TestMetadata("localDeclarations.kt")
        public void testLocalDeclarations() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/localDeclarations.kt", this::doClassTest);
        }

        @TestMetadata("noImplementationTrait.kt")
        public void testNoImplementationTrait() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/noImplementationTrait.kt", this::doClassTest);
        }

        @TestMetadata("simpleClass.kt")
        public void testSimpleClass() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/simpleClass.kt", this::doClassTest);
        }

        @TestMetadata("simpleObject.kt")
        public void testSimpleObject() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/simpleObject.kt", this::doClassTest);
        }

        @TestMetadata("traitWithFunImplement.kt")
        public void testTraitWithFunImplement() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/traitWithFunImplement.kt", this::doClassTest);
        }

        @TestMetadata("typealias.kt")
        public void testTypealias() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoClass/typealias.kt", this::doClassTest);
        }
    }

    @TestMetadata("idea/testData/navigation/gotoSymbol")
    @TestDataPath("$PROJECT_ROOT")
    @RunWith(JUnit3RunnerWithInners.class)
    public static class GotoSymbol extends AbstractKotlinGotoTest {
        public void testAllFilesPresentInGotoSymbol() throws Exception {
            KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/navigation/gotoSymbol"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
        }

        @TestMetadata("builtInArrayOfNulls.kt")
        public void testBuiltInArrayOfNulls() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/builtInArrayOfNulls.kt", this::doSymbolTest);
        }

        @TestMetadata("builtInInt.kt")
        public void testBuiltInInt() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/builtInInt.kt", this::doSymbolTest);
        }

        @TestMetadata("enumConstants.kt")
        public void testEnumConstants() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/enumConstants.kt", this::doSymbolTest);
        }

        @TestMetadata("functions.kt")
        public void testFunctions() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/functions.kt", this::doSymbolTest);
        }

        @TestMetadata("javaMethods.kt")
        public void testJavaMethods() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/javaMethods.kt", this::doSymbolTest);
        }

        @TestMetadata("localFunction.kt")
        public void testLocalFunction() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/localFunction.kt", this::doSymbolTest);
        }

        @TestMetadata("privateTopLevelDeclarations.kt")
        public void testPrivateTopLevelDeclarations() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/privateTopLevelDeclarations.kt", this::doSymbolTest);
        }

        @TestMetadata("properties.kt")
        public void testProperties() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/properties.kt", this::doSymbolTest);
        }

        @TestMetadata("stdLibArrayListOf.kt")
        public void testStdLibArrayListOf() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/stdLibArrayListOf.kt", this::doSymbolTest);
        }

        @TestMetadata("stdLibArrayListOfNoSources.kt")
        public void testStdLibArrayListOfNoSources() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/stdLibArrayListOfNoSources.kt", this::doSymbolTest);
        }

        @TestMetadata("stdLibJoinToString.kt")
        public void testStdLibJoinToString() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/stdLibJoinToString.kt", this::doSymbolTest);
        }

        @TestMetadata("typealias.kt")
        public void testTypealias() throws Exception {
            KotlinTestUtils.runTest("idea/testData/navigation/gotoSymbol/typealias.kt", this::doSymbolTest);
        }
    }
}

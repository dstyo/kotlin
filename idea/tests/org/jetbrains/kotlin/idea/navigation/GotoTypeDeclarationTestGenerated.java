/*
 * Copyright 2010-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license
 * that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.idea.navigation;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("idea/testData/navigation/gotoTypeDeclaration")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class GotoTypeDeclarationTestGenerated extends AbstractGotoTypeDeclarationTest {
    public void testAllFilesPresentInGotoTypeDeclaration() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/navigation/gotoTypeDeclaration"), Pattern.compile("^(.+)\\.test$"), TargetBackend.ANY, true);
    }

    @TestMetadata("builtinTypeStdlib.test")
    public void testBuiltinTypeStdlib() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/builtinTypeStdlib.test", this::doTest);
    }

    @TestMetadata("explicitParameterInLambda.test")
    public void testExplicitParameterInLambda() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/explicitParameterInLambda.test", this::doTest);
    }

    @TestMetadata("fromFunctionDeclarationName.test")
    public void testFromFunctionDeclarationName() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/fromFunctionDeclarationName.test", this::doTest);
    }

    @TestMetadata("fromFunctionDeclarationReturn.test")
    public void testFromFunctionDeclarationReturn() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/fromFunctionDeclarationReturn.test", this::doTest);
    }

    @TestMetadata("fromFunctionDeclrationExtension.test")
    public void testFromFunctionDeclrationExtension() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/fromFunctionDeclrationExtension.test", this::doTest);
    }

    @TestMetadata("functionCall.test")
    public void testFunctionCall() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/functionCall.test", this::doTest);
    }

    @TestMetadata("itExtensionLambda.test")
    public void testItExtensionLambda() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/itExtensionLambda.test", this::doTest);
    }

    @TestMetadata("itParameterInLambda.test")
    public void testItParameterInLambda() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/itParameterInLambda.test", this::doTest);
    }

    @TestMetadata("noParametersLambda.test")
    public void testNoParametersLambda() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/noParametersLambda.test", this::doTest);
    }

    @TestMetadata("thisExtensionFunction.test")
    public void testThisExtensionFunction() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/thisExtensionFunction.test", this::doTest);
    }

    @TestMetadata("thisExtensionFunctionWithAnnotationOnReceiver.test")
    public void testThisExtensionFunctionWithAnnotationOnReceiver() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/thisExtensionFunctionWithAnnotationOnReceiver.test", this::doTest);
    }

    @TestMetadata("thisExtensionFunctionWithGenericReceiver.test")
    public void testThisExtensionFunctionWithGenericReceiver() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/thisExtensionFunctionWithGenericReceiver.test", this::doTest);
    }

    @TestMetadata("thisExtensionLambda.test")
    public void testThisExtensionLambda() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/thisExtensionLambda.test", this::doTest);
    }

    @TestMetadata("thisInExtensionPropertyAccessor.test")
    public void testThisInExtensionPropertyAccessor() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/thisInExtensionPropertyAccessor.test", this::doTest);
    }

    @TestMetadata("variableType.test")
    public void testVariableType() throws Exception {
        KotlinTestUtils.runTest("idea/testData/navigation/gotoTypeDeclaration/variableType.test", this::doTest);
    }
}
